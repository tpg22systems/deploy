################################################################################
# Game Control System Docker
################################################################################
# docker-compose up
################################################################################
version: "3.7"

services:
  logic:
    container_name: node-red
    image: ${REGISTRY:-docker.camart.co.uk:5000}/tpg22-control-build-logic:latest    
    restart: always
    depends_on:
      - couchdb
    environment:
      - TZ=Europe/London
      - NODE_RED_CREDENTIAL_SECRET      
    ports:
      - "7000:7000"
      - "8000:8000"
    networks:
      - topgolf
    volumes:
      - ${LOGIC_FLOW:-logic-flow}:/data/projects/logic
      - node-red-context:/data/context
      - ${LOGIC_CONFIG:-logic-config}:/data/config
      - ${LOGIC_CUSTOM:-logic-custom}:/data/custom 
      - ${SPEC_SOURCE:-api-spec}:/data/spec:ro
    extra_hosts:
      mqttbroker: ${MQTT_BROKER_IP:-host-gateway}
  app:
    container_name: app
    image: ${REGISTRY:-docker.camart.co.uk:5000}/tpg22-control-build-app:latest
    restart: always
    ports: 
      - "${APP_HTTP_PORT:-80}:80"
      - "${APP_HTTPS_PORT:-443}:443"
      - 8080:8080
      - 9090:9090
      - 3030:3030
    networks:
      - topgolf  
    volumes: 
      - ${APP_SOURCE:-app-source}:/usr/share/nginx/html/client
      - ${SPEC_SOURCE:-api-spec}:/usr/share/nginx/html/spec
  prism:
    container_name: prism
    image: stoplight/prism:4
    restart: always
    command: 'proxy -h 0.0.0.0 /spec/api/gamelogic.openapi.yaml http://logic:1880/v1/'
    volumes:      
      - ${SPEC_SOURCE:-api-spec}:/spec:ro
    networks:
      - topgolf  
    ports:
      - 4010:4010
  couchdb:
    container_name: couchdb
    image: couchdb
    restart: always
    volumes:
      - ./couchdb/:/opt/couchdb/etc/local.d
      - ${COUCHDB_DATA:-couchdb-data}:/opt/couchdb/data
    networks:
      - topgolf
    expose: 
      - 5984
    ports:
      - 5984:5984
  ntp:
    image: cturra/ntp
    container_name: ntp
    restart: always
    ports:
      - 123:123/udp
    environment:
      - NTP_SERVERS=time.cloudflare.com
      - LOG_LEVEL=0
    networks:
      - topgolf
  mosquitto:
    container_name: mqtt
    restart: unless-stopped
    image: eclipse-mosquitto:2
    volumes:
      - ./mosquitto/:/mosquitto/config/:ro      
    ports:
      - 1883:${MOSQUITTO_PORT:-1883}
      - 9001:9001
    networks:
      - topgolf
  #prometheus:
  #  image: prom/prometheus:latest
  #  container_name: monitoring_prometheus
  #  expose:
  #    - 9090
  #  command:
  #    - --config.file=/etc/prometheus/prometheus.yml
  #  volumes:
  #    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #  links:
  #    - cadvisor:cadvisor
  #    - nodeexporter:nodeexporter
  #  networks:
  #    - topgolf
  #cadvisor:
  #  image: gcr.io/cadvisor/cadvisor:latest
  #  container_name: monitoring_cadvisor
  #  expose:
  #    - 8080
  #  volumes:
  #    - /:/rootfs:ro
  #    - /var/run:/var/run:rw
  #    - /sys:/sys:ro
  #    - /var/lib/docker/:/var/lib/docker:ro
  #  depends_on:
  #    - redis
  #  networks:
  #    - topgolf
  redis:
    image: redis:latest
    container_name: redis
    #ports:
    #  - 6379:6379
    networks:
      - topgolf
  #grafana:
  #  image: grafana/grafana:latest
  #  container_name: monitoring_grafana
  #  links:
  #    - prometheus:prometheus
  #  expose:
  #    - 3000
  #  restart: unless-stopped
  #  volumes:
  #    - ./grafana/provisioning:/etc/grafana/provisioning
  #    - grafana-data:/var/lib/grafana
  #  networks:
  #    - topgolf
  #  environment:
  #    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-golf}
  #    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASS:-charts}
  #    - GF_USERS_ALLOW_SIGN_UP=false
  #    - GF_LIVE_ALLOWED_ORIGINS = gamecontrolsystem.com:3000,192.168.11.251:3000
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped    
    expose:
      - 9100
    networks:
      - topgolf

volumes:
  logic-flow:
  node-red-context:
  logic-custom:
  logic-config:
  app-source:
  api-spec: 
  database:
  couchdb-data:
  couchdb-conf:
  grafana-data:
  
networks:
  topgolf:
